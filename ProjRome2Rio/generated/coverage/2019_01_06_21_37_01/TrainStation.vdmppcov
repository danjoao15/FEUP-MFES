class TrainStation 
types
public String = seq of char;
values
-- TODO Define values here
instance variables
private name:String;
private location: Location;

operations

-- Returns the name of the airport in the Airport object --

public TrainStation : String*Location ==> TrainStation
TrainStation (n, l)== (
	name:=n;
	location:=l;
	);
	
public getName: () ==> String
getName() == (return name);

public getLocation: () ==> Location
getLocation() == (return location);
				

end TrainStation

class TrainStationTest is subclass of TestSuiteRome2Rio

	instance variables
	l1 :  Location := new Location("Porto", "Portugal");
	l2 : Location := new Location("Madrid", "Spain");
	l3 : Location := new Location("Aveiro", "Portugal");
	ts1 : TrainStation := new TrainStation("Campanha", l1);
	ts2 : TrainStation := new TrainStation("Espinho", l2);
	ts3 : TrainStation := new TrainStation("Trindade", l1);
	ts4 : TrainStation := new TrainStation("Estarreja", l2);
	
	
	operations
		private testgetName: () ==> ()
			testgetName() == (
				assertEqual(ts1.getName(), "Campanha");
				assertEqual(ts2.getName(), "Espinho");
				assertEqual(ts3.getName(), "Trindade");
				assertEqual(ts4.getName(), "Estarreja");
			);
			
			private testgetLocation: () ==> ()
			testgetLocation() == (
				assertEqual(ts1.getLocation(), l1);
				assertEqual(ts2.getLocation(), l2);
				assertEqual(ts3.getLocation(), l1);
				assertEqual(ts4.getLocation(), l2);
			);
			
			
	public static main: () ==> ()
		    main() ==
		    (
		    	dcl test : TrainStationTest := new TrainStationTest();
		    	test.testgetName();
		    	test.testgetLocation();
		    	);
		    	
end TrainStationTest