class Airport 
types
public String = seq of char;
values
-- TODO Define values here
instance variables
private name:String;
private location: Location;

operations

-- Returns the name of the airport in the Airport object --

public Airport : String*Location ==> Airport
Airport (n, l)== (
	name:=n;
	location:=l;
	);
	
public getName: () ==> String
getName() == (return name);

public getLocation: () ==> Location
getLocation() == (return location);
				
end Airport

class AirportTest is subclass of TestSuiteRome2Rio

	instance variables
	l1 :  Location := new Location("Porto", "Portugal");
	l2 : Location := new Location("Madrid", "Spain");
	a1 : Airport := new Airport("Aeroporto do Porto", l1);
	a2 : Airport := new Airport("Aeroporto de Madrid", l2);
	
	operations
		private testgetName: () ==> ()
			testgetName() == (
				assertEqual(a1.getName(), "Aeroporto de Lisboa");
				assertEqual(a2.getName(), "Aeroporto do Porto");
			);
			
			private testgetLocation: () ==> ()
			testgetLocation() == (
				assertEqual(a1.getLocation(), "Lisboa");
				assertEqual(a2.getLocation(), "Porto");
			);
			
			
	public static main: () ==> ()
		    main() ==
		    (
		    	dcl test : AirportTest := new AirportTest();
		    	test.testgetName();
		    	test.testgetLocation();
		    	);
		    	
end AirportTest
