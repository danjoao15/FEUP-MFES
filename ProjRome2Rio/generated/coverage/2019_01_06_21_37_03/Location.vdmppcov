class Location
	types
			public String = seq of char;

	instance variables
			private city : String;
			private country : String;
			
			inv city <> [];
			inv country <> [];

	operations
			-- Create a new Location object with all necessary parameters --
			public Location: String * String ==> Location
				Location(c, p) == (city := c; country := p; return self)
			pre c <> [] and p <> [];	
		
			-- GETS --
		
			-- Returns the name of the city in the Location object --
			public getCity: () ==> String
				getCity() == (return city);
				
			-- Return the name of the country in the Location object --
			public getCountry: () ==> String
				getCountry() == (return country);

			-- SETS --
			
			-- Changes the name of the city in the Location object --
			public setCity: String ==> ()
				setCity(c) == (city := c; return)
				pre c <> [];
			
			-- Changes the name of the country in the Location object --
			public setCountry: String ==> ()
				setCountry(p) == (country := p; return)
				pre p <> [];
			
end Location

class LocationTest is subclass of TestSuiteRome2Rio

	instance variables
	l1 :  Location := new Location("Porto", "Portugal");
	l2 : Location := new Location("Madrid", "Spain");
	
	operations
		private testgetCity: () ==> ()
			testgetCity() == (
				assertEqual(l1.getCity(), "Porto");
				assertEqual(l2.getCity(), "Madrid");
			);
			
			private testgetCountry: () ==> ()
			testgetCountry() == (
				assertEqual(l1.getCountry(), "Portugal");
				assertEqual(l2.getCountry(), "Spain");
			);
			
			private testsetCity: () ==> ()
			testsetCity() == (
				l1.setCity("Lisbon");
				l2.setCity("Barcelona");
			);
			
			private testsetCountry: () ==> ()
			testsetCountry() == (
				l1.setCountry("Lusitanos");
				l2.setCountry("Mouros");
			);
			
			
	public static main: () ==> ()
		    main() ==
		    (
		    	dcl test : LocationTest := new LocationTest();
		    	test.testgetCity();
		    	test.testgetCountry();
		    	test.testsetCity();
		    	test.testsetCountry();
		    	
		    	);
		    	
end LocationTest

